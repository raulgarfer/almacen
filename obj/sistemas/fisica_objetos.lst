                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module fisica_objetos
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _espera_pulsar
                             12 	.globl _fin_juego
                             13 	.globl _borra_objeto
                             14 	.globl _suma_puntos
                             15 	.globl _cpct_getScreenPtr
                             16 	.globl _cpct_drawStringM2
                             17 	.globl _cpct_isAnyKeyPressed
                             18 	.globl _cpct_scanKeyboard
                             19 	.globl _fisica_objetos
                             20 	.globl _comprobar_recojida
                             21 	.globl _muere
                             22 	.globl _espera_pulsacion_tecla
                             23 ;--------------------------------------------------------
                             24 ; special function registers
                             25 ;--------------------------------------------------------
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DATA
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _INITIALIZED
                             34 ;--------------------------------------------------------
                             35 ; absolute external ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DABS (ABS)
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _GSINIT
                             43 	.area _GSFINAL
                             44 	.area _GSINIT
                             45 ;--------------------------------------------------------
                             46 ; Home
                             47 ;--------------------------------------------------------
                             48 	.area _HOME
                             49 	.area _HOME
                             50 ;--------------------------------------------------------
                             51 ; code
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                             54 ;src/sistemas/fisica_objetos.c:4: void fisica_objetos(){
                             55 ;	---------------------------------
                             56 ; Function fisica_objetos
                             57 ; ---------------------------------
   0000                      58 _fisica_objetos::
                             59 ;src/sistemas/fisica_objetos.c:5: borra_objeto(x_manzana,y_manzana,MANZANA_W,MANZANA_H);
   0000 21 02 10      [10]   60 	ld	hl, #0x1002
   0003 E5            [11]   61 	push	hl
   0004 3Ar00r00      [13]   62 	ld	a, (_y_manzana)
   0007 F5            [11]   63 	push	af
   0008 33            [ 6]   64 	inc	sp
   0009 3Ar00r00      [13]   65 	ld	a, (_x_manzana)
   000C F5            [11]   66 	push	af
   000D 33            [ 6]   67 	inc	sp
   000E CDr00r00      [17]   68 	call	_borra_objeto
   0011 F1            [10]   69 	pop	af
   0012 F1            [10]   70 	pop	af
                             71 ;src/sistemas/fisica_objetos.c:6: x_manzana+=vx_manzana;
   0013 FD 21r00r00   [14]   72 	ld	iy, #_x_manzana
   0017 FD 7E 00      [19]   73 	ld	a, 0 (iy)
   001A 21r00r00      [10]   74 	ld	hl, #_vx_manzana
   001D 86            [ 7]   75 	add	a, (hl)
   001E FD 77 00      [19]   76 	ld	0 (iy), a
                             77 ;src/sistemas/fisica_objetos.c:7: if (x_manzana==caida_objeto)
   0021 3Ar00r00      [13]   78 	ld	a,(#_x_manzana + 0)
   0024 FD 21r00r00   [14]   79 	ld	iy, #_caida_objeto
   0028 FD 96 00      [19]   80 	sub	a, 0 (iy)
   002B C0            [11]   81 	ret	NZ
                             82 ;src/sistemas/fisica_objetos.c:8: {comprobar_recojida();}
   002C C3r2Fr00      [10]   83 	jp  _comprobar_recojida
                             84 ;src/sistemas/fisica_objetos.c:11: void comprobar_recojida(){
                             85 ;	---------------------------------
                             86 ; Function comprobar_recojida
                             87 ; ---------------------------------
   002F                      88 _comprobar_recojida::
                             89 ;src/sistemas/fisica_objetos.c:12: if (y_manzana==y_jugador)
   002F 3Ar00r00      [13]   90 	ld	a,(#_y_manzana + 0)
   0032 FD 21r00r00   [14]   91 	ld	iy, #_y_jugador
   0036 FD 96 00      [19]   92 	sub	a, 0 (iy)
                             93 ;src/sistemas/fisica_objetos.c:13: {suma_puntos();}
   0039 CAr00r00      [10]   94 	jp	Z,_suma_puntos
                             95 ;src/sistemas/fisica_objetos.c:14: else {muere();}}
   003C C3r3Fr00      [10]   96 	jp  _muere
                             97 ;src/sistemas/fisica_objetos.c:16: void muere(){
                             98 ;	---------------------------------
                             99 ; Function muere
                            100 ; ---------------------------------
   003F                     101 _muere::
                            102 ;src/sistemas/fisica_objetos.c:17: vidas--;
   003F 21r00r00      [10]  103 	ld	hl, #_vidas+0
   0042 35            [11]  104 	dec	(hl)
                            105 ;src/sistemas/fisica_objetos.c:18: x_manzana = x_start_objeto;
   0043 21r00r00      [10]  106 	ld	hl,#_x_manzana + 0
   0046 36 3C         [10]  107 	ld	(hl), #0x3c
                            108 ;src/sistemas/fisica_objetos.c:19: pinta_marcador();
   0048 CDr00r00      [17]  109 	call	_pinta_marcador
                            110 ;src/sistemas/fisica_objetos.c:20: if (vidas=='0')
   004B 3Ar00r00      [13]  111 	ld	a,(#_vidas + 0)
   004E D6 30         [ 7]  112 	sub	a, #0x30
   0050 C0            [11]  113 	ret	NZ
                            114 ;src/sistemas/fisica_objetos.c:21: {fin_juego();}
   0051 C3r54r00      [10]  115 	jp  _fin_juego
                            116 ;src/sistemas/fisica_objetos.c:23: void fin_juego(){
                            117 ;	---------------------------------
                            118 ; Function fin_juego
                            119 ; ---------------------------------
   0054                     120 _fin_juego::
                            121 ;src/sistemas/fisica_objetos.c:26: pvmem=cpct_getScreenPtr(0xc000,10,20);
   0054 21 0A 14      [10]  122 	ld	hl, #0x140a
   0057 E5            [11]  123 	push	hl
   0058 21 00 C0      [10]  124 	ld	hl, #0xc000
   005B E5            [11]  125 	push	hl
   005C CDr00r00      [17]  126 	call	_cpct_getScreenPtr
                            127 ;src/sistemas/fisica_objetos.c:27: cpct_drawStringM2("Has sido despedido!",pvmem);
   005F 01r81r00      [10]  128 	ld	bc, #___str_0+0
   0062 E5            [11]  129 	push	hl
   0063 C5            [11]  130 	push	bc
   0064 CDr00r00      [17]  131 	call	_cpct_drawStringM2
                            132 ;src/sistemas/fisica_objetos.c:28: pvmem=cpct_getScreenPtr(0xc000,10,40);
   0067 21 0A 28      [10]  133 	ld	hl, #0x280a
   006A E5            [11]  134 	push	hl
   006B 21 00 C0      [10]  135 	ld	hl, #0xc000
   006E E5            [11]  136 	push	hl
   006F CDr00r00      [17]  137 	call	_cpct_getScreenPtr
                            138 ;src/sistemas/fisica_objetos.c:29: cpct_drawStringM2("Vuelve a intentarlo.",pvmem);
   0072 01r95r00      [10]  139 	ld	bc, #___str_1+0
   0075 E5            [11]  140 	push	hl
   0076 C5            [11]  141 	push	bc
   0077 CDr00r00      [17]  142 	call	_cpct_drawStringM2
                            143 ;src/sistemas/fisica_objetos.c:30: espera_pulsacion_tecla();
   007A CDrAAr00      [17]  144 	call	_espera_pulsacion_tecla
                            145 ;src/sistemas/fisica_objetos.c:31: espera_pulsar();
   007D CDrB7r00      [17]  146 	call	_espera_pulsar
   0080 C9            [10]  147 	ret
   0081                     148 ___str_0:
   0081 48 61 73 20 73 69   149 	.ascii "Has sido despedido!"
        64 6F 20 64 65 73
        70 65 64 69 64 6F
        21
   0094 00                  150 	.db 0x00
   0095                     151 ___str_1:
   0095 56 75 65 6C 76 65   152 	.ascii "Vuelve a intentarlo."
        20 61 20 69 6E 74
        65 6E 74 61 72 6C
        6F 2E
   00A9 00                  153 	.db 0x00
                            154 ;src/sistemas/fisica_objetos.c:33: void espera_pulsacion_tecla(){
                            155 ;	---------------------------------
                            156 ; Function espera_pulsacion_tecla
                            157 ; ---------------------------------
   00AA                     158 _espera_pulsacion_tecla::
                            159 ;src/sistemas/fisica_objetos.c:35: cpct_scanKeyboard();
   00AA CDr00r00      [17]  160 	call	_cpct_scanKeyboard
                            161 ;src/sistemas/fisica_objetos.c:36: pulsado=cpct_isAnyKeyPressed();
   00AD CDr00r00      [17]  162 	call	_cpct_isAnyKeyPressed
                            163 ;src/sistemas/fisica_objetos.c:37: if (pulsado!=0)
   00B0 7D            [ 4]  164 	ld	a, l
   00B1 B7            [ 4]  165 	or	a, a
                            166 ;src/sistemas/fisica_objetos.c:38: {espera_pulsar();}
   00B2 C2rB7r00      [10]  167 	jp	NZ,_espera_pulsar
                            168 ;src/sistemas/fisica_objetos.c:39: else espera_pulsacion_tecla();
   00B5 18 F3         [12]  169 	jr	_espera_pulsacion_tecla
                            170 ;src/sistemas/fisica_objetos.c:41: void espera_pulsar(){
                            171 ;	---------------------------------
                            172 ; Function espera_pulsar
                            173 ; ---------------------------------
   00B7                     174 _espera_pulsar::
                            175 ;src/sistemas/fisica_objetos.c:42: a_jugar();}
   00B7 C3r00r00      [10]  176 	jp  _a_jugar
                            177 	.area _CODE
                            178 	.area _INITIALIZER
                            179 	.area _CABS (ABS)
